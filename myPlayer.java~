import becker.robots.*;

/** a class extending RobotSE which represents an adventure playing the game of 
  * "Escape the Library".
  * A player has a location based on x coordinate and y coordinate that correlate
  * to a location within a room, the robot faces a direction.
  * 
  * @Author Nathaniel Pankhurst
  */

public class myPlayer extends RobotSE
{
  
  public myPlayer(City sCity, int str, int ave, becker.robots.Direction dir, int inv)
  {
    super(sCity, str, ave, dir, inv); 
  }

  

  
  public void faceNorth()
  {
    if(this.getDirection() == Direction.WEST)
    {this.turnRight();}
    else
    {
     while(this.getDirection() != Direction.NORTH)
     {
        this.turnLeft();
     }
    }
  }
    
  public void faceEast()
  {
    if(this.getDirection() == Direction.NORTH)
    {
      this.turnRight();
    }
    else
    {
      while(this.getDirection() != Direction.EAST)
      {
        this.turnLeft();
      }
    }
    }
      
  public void faceSouth()
  {
    if(this.getDirection() == Direction.EAST)
    {
      this.turnRight();
    }
    else
    {
      while(this.getDirection() != Direction.SOUTH)
      {
        this.turnLeft();
      }
    }
  }
          
          
  public void faceWest()
  {
    if(this.getDirection() == Direction.SOUTH)
    {
      this.turnRight();
    }
    else
    {
      while(this.getDirection() != Direction.WEST)
      {
        this.turnLeft();
      }
    }
      
  }
  
  public void nonMoveErrorCheck()
  {
    if(!this.frontIsClear())
    {
      int x = this.getAvenue();
      int y = this.getStreet();
      if ((y == 5) && (x == 1))
      {
        System.out.println("I shouldn't leave till I have collected more of my things.");  
      }
      else if ((y == 5) && (x == 13))
      {
        System.out.println("I shouldn't leave till I have collected more of my things.");  
      }
      else if ((y == 1) && (x == 10))
      {
        System.out.println("I shouldn't leave till I have collected more of my things.");  
      }
      else if ((y == 18) && (x == 8))
      {     
        System.out.println("I shouldn't leave till I have collected more of my things.");  
      }
      else
      {
        System.out.println("Error: This way is blocked.");
      }
        
      
    }
    else
    {
      this.move();
    }
    
  }
  
  public void nonPickErrorCheck()
  {
    if(!this.canPickThing())
    {
      System.out.println("Error: There isn't anything to pick up.");
    }
    else
    {
      this.pickThing();
    }
  }
  
  public void nonPutErrorCheck()
  {
    if(this.countThingsInBackpack() < 1)
    {
      System.out.println("Error: I don't have anything to put down");
    }
    else
    {
    this.putThing();
    }
  }

}